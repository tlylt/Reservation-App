{"version":3,"sources":["Firebase.js","Navigation.js","Welcome.js","Home.js","FormError.js","Login.js","ReservationsList.js","Reservation.js","Register.js","Checkin.js","AttendeesList.js","Attendees.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","GoogleAuthProvider","Navigation","this","props","userName","logOutUser","className","to","Fragment","onClick","e","Component","Welcome","Home","FormError","errorMessage","Login","state","email","password","handleChange","bind","handleSubmit","tempName","target","name","tempValue","value","setState","preventDefault","registrationInfo","signInWithEmailAndPassword","then","navigate","catch","error","message","onSubmit","htmlFor","type","id","placeholder","onChange","required","ReservationsList","deleteReservation","whichReservation","database","ref","userID","remove","myReservations","reservations","map","item","key","reservationID","role","title","reservationName","Reservation","itemName","itemValue","addReservation","aria-describedby","length","Register","repeatPassword","createUserWithEmailAndPassword","registerUser","Checkin","push","attendeeName","attendeeEmail","star","AttendeesList","deleteAttendee","whichAttendee","adminUser","toggleStar","undefined","set","admin","myAttendees","attendees","attendeeID","href","Attendees","searchQuery","allAttendees","displayAttendees","resetQuery","chooseRandom","on","snapshot","val","attendeesList","randomAttendee","Math","floor","random","filteredAttendees","filter","toLowerCase","match","App","onAuthStateChanged","FBuser","updateProfile","displayName","user","uid","signOut","howManyReservations","reservationsList","path","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mTAgBAA,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,wCACZC,YAAa,+CACbC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,gBACnBC,MAAO,+CAKe,IAAIR,IAASS,KAAKC,mBACtBV,IAASS,OADtB,IAEQT,IAAf,E,QC8BeW,E,iLA7CH,IAAD,EAC0BC,KAAKC,MAA9BC,EADD,EACCA,SAAUC,EADX,EACWA,WAClB,OACE,yBAAKC,UAAU,4CACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,oBAChC,kBAAC,IAAD,CAAOD,UAAU,SADnB,mBAIA,yBAAKA,UAAU,sBACZF,EACC,kBAAC,IAAMI,SAAP,KACE,kBAAC,IAAD,CACEF,UAAU,oBACVC,GAAG,+BAFL,kBAMA,kBAAC,IAAD,CACED,UAAU,oBACVC,GAAG,SACHE,QAAS,SAAAC,GAAC,OAAIL,EAAWK,KAH3B,YASF,kBAAC,IAAMF,SAAP,KACE,kBAAC,IAAD,CAAMF,UAAU,oBAAoBC,GAAG,yBAAvC,SAGA,kBAAC,IAAD,CACED,UAAU,oBACVC,GAAG,4BAFL,mB,GAhCSI,aCsBVC,E,iLAtBH,IAAD,EAC0BV,KAAKC,MAA9BC,EADD,EACCA,SAAUC,EADX,EACWA,WAClB,OACE,yBAAKC,UAAU,oDACZF,GACC,kBAAC,IAAMI,SAAP,KACE,uBAAGF,UAAU,IAAb,WACWF,EADX,IACsB,IACpB,kBAAC,IAAD,CACEE,UAAU,iBACVC,GAAG,wBACHE,QAAS,SAAAC,GAAC,OAAIL,EAAWK,KAH3B,kB,GATQC,aC8CPE,E,iLA7CH,IACAT,EAAaF,KAAKC,MAAlBC,SACR,OACE,yBAAKE,UAAU,yBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,aAAf,yBACA,uBAAGA,UAAU,QACV,IADH,8JAMCF,EACC,kBAAC,IAAMI,SAAP,KACE,kBAAC,IAAD,CACEF,UAAU,wBACVC,GAAG,+BAFL,mBAQF,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CACEF,UAAU,wBACVC,GAAG,yBAFL,SAMA,kBAAC,IAAD,CACED,UAAU,wBACVC,GAAG,4BAFL,mB,GA/BGI,a,eCMJG,E,iLANH,IACAC,EAAiBb,KAAKC,MAAtBY,aACR,OAAO,yBAAKT,UAAU,kCAAkCS,O,GAHpCJ,aCqHTK,E,YAjHb,WAAYb,GAAQ,IAAD,8BACjB,4CAAMA,KACDc,MAAQ,CACXC,MAAO,GACPC,SAAU,GACVJ,aAAc,MAEhB,EAAKK,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBARH,E,0EAUNX,GACX,IAAMa,EAAWb,EAAEc,OAAOC,KACpBC,EAAYhB,EAAEc,OAAOG,MAC3BzB,KAAK0B,SAAL,eACGL,EAAWG,M,mCAGHhB,GAAI,IAAD,OACdA,EAAEmB,iBACF,IAAIC,EAAmB,CACrBZ,MAAOhB,KAAKe,MAAMC,MAClBC,SAAUjB,KAAKe,MAAME,UAOvB7B,EACGS,OACAgC,2BACCD,EAAiBZ,MACjBY,EAAiBX,UAElBa,MAAK,WACJC,YAAS,kCAEVC,OAAM,SAAAC,GACLA,EAAMC,QACF,EAAKR,SAAS,CAAEb,aAAcoB,EAAMC,UACpC,EAAKR,SAAS,CAAEb,aAAc,Y,+BAKtC,OACE,0BAAMT,UAAU,OAAO+B,SAAUnC,KAAKoB,cACpC,yBAAKhB,UAAU,aACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,QAAd,UACA,yBAAKA,UAAU,YAEZJ,KAAKe,MAAMF,cACV,kBAAC,EAAD,CAAWA,aAAcb,KAAKe,MAAMF,eAEtC,6BAAST,UAAU,wBACjB,2BACEA,UAAU,6BACVgC,QAAQ,SAFV,SAMA,2BACEhC,UAAU,eACViC,KAAK,QACLC,GAAG,QACHC,YAAY,QACZhB,KAAK,QACLE,MAAOzB,KAAKe,MAAMC,MAClBwB,SAAUxC,KAAKkB,aACfuB,UAAQ,KAGZ,6BAASrC,UAAU,wBACjB,2BACEA,UAAU,6BACVgC,QAAQ,YAFV,YAMA,2BACEhC,UAAU,eACViC,KAAK,WACLC,GAAG,WACHC,YAAY,WACZhB,KAAK,WACLE,MAAOzB,KAAKe,MAAME,SAClBuB,SAAUxC,KAAKkB,aACfuB,UAAQ,KAGZ,yBAAKrC,UAAU,kBACb,4BACEiC,KAAK,SACLjC,UAAU,6BAFZ,qB,GAhGFK,a,QC+DLiC,E,YA7Db,WAAYzC,GAAQ,IAAD,8BACjB,4CAAMA,KAGR0C,kBAAoB,SAACnC,EAAGoC,GACtBpC,EAAEmB,iBACUvC,EACTyD,WACAC,IAFS,uCAGwB,EAAK7C,MAAM8C,OAHnC,YAG6CH,IAErDI,UATJ,EAAKL,kBAAoB,EAAKA,kBAAkBxB,KAAvB,gBAFR,E,sEAcT,IAAD,OAED8B,EADmBjD,KAAKC,MAAtBiD,aAC4BC,KAAI,SAAAC,GACtC,OACE,yBAAKhD,UAAU,yBAAyBiD,IAAKD,EAAKE,eAChD,6BAASlD,UAAU,8BAA8BmD,KAAK,SACpD,4BACEnD,UAAU,mCACVoD,MAAM,iBACNjD,QAAS,kBACPwB,YAAS,6BAAD,OACuB,EAAK9B,MAAM8C,OADlC,YAC4CK,EAAKE,kBAI3D,kBAAC,IAAD,OAGF,4BACElD,UAAU,mCACVoD,MAAM,WACNjD,QAAS,kBACPwB,YAAS,2BAAD,OACqB,EAAK9B,MAAM8C,OADhC,YAC0CK,EAAKE,kBAIzD,kBAAC,IAAD,OAEF,4BACElD,UAAU,mCACVoD,MAAM,qBACNjD,QAAS,SAAAC,GAAC,OAAI,EAAKmC,kBAAkBnC,EAAG4C,EAAKE,iBAE7C,kBAAC,IAAD,QAGJ,6BAASlD,UAAU,oCAChBgD,EAAKK,qBAMd,OAAO,6BAAMR,O,GA3DcxC,aC2EhBiD,E,YA7Eb,WAAYzD,GAAQ,IAAD,8BACjB,4CAAMA,KACDc,MAAQ,CACX0C,gBAAiB,IAEnB,EAAKvC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBANH,E,0EAQNX,GACX,IAAMmD,EAAWnD,EAAEc,OAAOC,KACpBqC,EAAYpD,EAAEc,OAAOG,MAC3BzB,KAAK0B,SAAL,eAAiBiC,EAAWC,M,mCAEjBpD,GACXA,EAAEmB,iBACF3B,KAAKC,MAAM4D,eAAe7D,KAAKe,MAAM0C,iBACrCzD,KAAK0B,SAAS,CACZ+B,gBAAiB,O,+BAInB,OACE,yBAAKrD,UAAU,kBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,wBACb,wBAAIA,UAAU,qBAAd,qBACA,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,yBACb,0BAAMA,UAAU,aAAa+B,SAAUnC,KAAKoB,cAC1C,yBAAKhB,UAAU,8BACb,2BACEiC,KAAK,OACLjC,UAAU,eACVmB,KAAK,kBACLgB,YAAY,mBACZuB,mBAAiB,YACjBrC,MAAOzB,KAAKe,MAAM0C,gBAClBjB,SAAUxC,KAAKkB,eAEjB,yBAAKd,UAAU,sBACb,4BACEiC,KAAK,SACLjC,UAAU,2BACVkC,GAAG,aAEH,kBAAC,IAAD,aAQd,yBAAKlC,UAAU,+BACb,yBAAKA,UAAU,+BACZJ,KAAKC,MAAMiD,cAAgBlD,KAAKC,MAAMiD,aAAaa,OAClD,yBAAK3D,UAAU,kBACb,wBAAIA,UAAU,oCAAd,sBAIA,KACHJ,KAAKC,MAAMiD,cACV,yBAAK9C,UAAU,+BACb,kBAAC,EAAD,CACE8C,aAAclD,KAAKC,MAAMiD,aACzBH,OAAQ/C,KAAKC,MAAM8C,kB,GAnEbtC,aCiKXuD,E,YA/Jb,WAAY/D,GAAQ,IAAD,8BACjB,4CAAMA,KACDc,MAAQ,CACXb,SAAU,GACVc,MAAO,GACPC,SAAU,GACVgD,eAAgB,GAChBpD,aAAc,MAEhB,EAAKK,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAVH,E,0EAYNX,GAAI,IAAD,OACRa,EAAWb,EAAEc,OAAOC,KACpBC,EAAYhB,EAAEc,OAAOG,MAC3BzB,KAAK0B,SAAL,eAEKL,EAAWG,IAEd,WACM,EAAKT,MAAME,WAAa,EAAKF,MAAMkD,eACrC,EAAKvC,SAAS,CAAEb,aAAc,2BAE9B,EAAKa,SAAS,CAAEb,aAAc,Y,mCAKzBL,GAAI,IAAD,OACdA,EAAEmB,iBACF,IAAIC,EAAmB,CACrB1B,SAAUF,KAAKe,MAAMb,SACrBc,MAAOhB,KAAKe,MAAMC,MAClBC,SAAUjB,KAAKe,MAAME,UAMvB7B,EACGS,OACAqE,+BACCtC,EAAiBZ,MACjBY,EAAiBX,UAElBa,MAAK,WACJ,EAAK7B,MAAMkE,aAAavC,EAAiB1B,aAE1C8B,OAAM,SAAAC,GACLA,EAAMC,QACF,EAAKR,SAAS,CAAEb,aAAcoB,EAAMC,UACpC,EAAKR,SAAS,CAAEb,aAAc,Y,+BAKtC,OACE,0BAAMT,UAAU,OAAO+B,SAAUnC,KAAKoB,cACpC,yBAAKhB,UAAU,aACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,QAAd,WACA,yBAAKA,UAAU,YAEZJ,KAAKe,MAAMF,cACV,kBAAC,EAAD,CAAWA,aAAcb,KAAKe,MAAMF,eAEtC,6BAAST,UAAU,wBACjB,2BACEA,UAAU,6BACVgC,QAAQ,YAFV,aAMA,2BACEhC,UAAU,eACViC,KAAK,OACLC,GAAG,WACHC,YAAY,YACZhB,KAAK,WACLE,MAAOzB,KAAKe,MAAMb,SAClBsC,SAAUxC,KAAKkB,aACfuB,UAAQ,KAGZ,6BAASrC,UAAU,wBACjB,2BACEA,UAAU,6BACVgC,QAAQ,SAFV,SAMA,2BACEhC,UAAU,eACViC,KAAK,QACLC,GAAG,QACHC,YAAY,QACZhB,KAAK,QACLE,MAAOzB,KAAKe,MAAMC,MAClBwB,SAAUxC,KAAKkB,aACfuB,UAAQ,KAGZ,6BAASrC,UAAU,uBACjB,2BACEA,UAAU,6BACVgC,QAAQ,YAFV,YAMA,2BACEhC,UAAU,eACViC,KAAK,WACLC,GAAG,WACHC,YAAY,WACZhB,KAAK,WACLE,MAAOzB,KAAKe,MAAME,SAClBuB,SAAUxC,KAAKkB,aACfuB,UAAQ,KAGZ,6BAASrC,UAAU,uBACjB,2BACEA,UAAU,6BACVgC,QAAQ,kBAFV,mBAMA,2BACEhC,UAAU,eACViC,KAAK,WACLC,GAAG,cACHC,YAAY,kBACZhB,KAAK,iBACLE,MAAOzB,KAAKe,MAAMkD,eAClBzB,SAAUxC,KAAKkB,aACfuB,UAAQ,KAGZ,yBAAKrC,UAAU,cACb,4BACEiC,KAAK,SACLjC,UAAU,6BAFZ,wB,GA/ICK,aC8FR2D,E,YA7Fb,WAAYnE,GAAQ,IAAD,8BACjB,4CAAMA,KACDc,MAAQ,CACXb,SAAU,GACVc,MAAO,IAET,EAAKE,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPH,E,0EASNX,GACX,IAAMa,EAAWb,EAAEc,OAAOC,KACpBC,EAAYhB,EAAEc,OAAOG,MAC3BzB,KAAK0B,SAAL,eACGL,EAAWG,M,mCAGHhB,GACXA,EAAEmB,iBACUvC,EACTyD,WACAC,IAFS,uCAGwB9C,KAAKC,MAAM8C,OAHnC,YAG6C/C,KAAKC,MAAMqD,cAHxD,eAKRe,KAAK,CACPC,aAActE,KAAKe,MAAMb,SACzBqE,cAAevE,KAAKe,MAAMC,MAC1BwD,MAAM,IAERzC,YAAS,6BAAD,OACuB/B,KAAKC,MAAM8C,OADlC,YAC4C/C,KAAKC,MAAMqD,kB,+BAK/D,OACE,0BAAMlD,UAAU,OAAO+B,SAAUnC,KAAKoB,cACpC,yBAAKhB,UAAU,aACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,0BAAd,YACA,6BAASA,UAAU,cACjB,2BACEA,UAAU,6BACVgC,QAAQ,YAFV,QAMA,2BACEK,UAAQ,EACRrC,UAAU,eACViC,KAAK,OACLC,GAAG,WACHf,KAAK,WACLgB,YAAY,OACZd,MAAOzB,KAAKe,MAAMb,SAClBsC,SAAUxC,KAAKkB,gBAGnB,6BAASd,UAAU,cACjB,2BACEA,UAAU,6BACVgC,QAAQ,SAFV,SAMA,2BACEK,UAAQ,EACRrC,UAAU,eACViC,KAAK,QACLC,GAAG,QACHf,KAAK,QACLgB,YAAY,QACZd,MAAOzB,KAAKe,MAAMC,MAClBwB,SAAUxC,KAAKkB,gBAGnB,yBAAKd,UAAU,8BACb,4BAAQA,UAAU,kBAAkBiC,KAAK,UAAzC,uB,GAhFE5B,aCiGPgE,E,YAhGb,WAAYxE,GAAQ,IAAD,8BACjB,4CAAMA,KAGRyE,eAAiB,SAAClE,EAAGoC,EAAkB+B,GACrCnE,EAAEmB,iBACF,IAAMiD,EAAY,EAAK3E,MAAM2E,UACjBxF,EACTyD,WACAC,IAFS,uCAGwB8B,EAHxB,YAGqChC,EAHrC,sBAGmE+B,IAE3E3B,UAZa,EAcnB6B,WAAa,SAACrE,EAAGgE,EAAM5B,EAAkB+B,GACvCnE,EAAEmB,iBACF,IAAMiD,EAAY,EAAK3E,MAAM2E,UACvB9B,EAAM1D,EACTyD,WACAC,IAFS,uCAGwB8B,EAHxB,YAGqChC,EAHrC,sBAGmE+B,EAHnE,eAMCG,IAATN,EACF1B,EAAIiC,KAAI,GAERjC,EAAIiC,KAAKP,IAxBX,EAAKE,eAAiB,EAAKA,eAAevD,KAApB,gBAFL,E,sEA6BT,IAAD,OACD6D,EAAQhF,KAAKC,MAAM2E,YAAc5E,KAAKC,MAAM8C,OAE5CkC,EADYjF,KAAKC,MAAMiF,UACC/B,KAAI,SAAAC,GAChC,OACE,yBACEhD,UAAU,iDACViD,IAAKD,EAAK+B,YAEV,yBAAK/E,UAAU,QACb,yBACEA,UAEE,kDACC4E,EAAQ,GAAK,2BAGfA,GACC,yBAAK5E,UAAU,kBACb,4BACEA,UACE,eACCgD,EAAKoB,KAAO,gBAAkB,yBAEjChB,MAAM,uBACNjD,QAAS,SAAAC,GAAC,OACR,EAAKqE,WACHrE,EACA4C,EAAKoB,KACL,EAAKvE,MAAMqD,cACXF,EAAK+B,cAIT,kBAAC,IAAD,OAEF,uBACEC,KAAI,iBAAYhC,EAAKmB,eACrBnE,UAAU,mCACVoD,MAAM,iBAEN,kBAAC,IAAD,OAEF,4BACEpD,UAAU,mCACVoD,MAAM,kBACNjD,QAAS,SAAAC,GAAC,OACR,EAAKkE,eACHlE,EACA,EAAKP,MAAMqD,cACXF,EAAK+B,cAIT,kBAAC,IAAD,QAIN,6BAAM/B,EAAKkB,oBAMrB,OAAO,yBAAKlE,UAAU,8BAA8B6E,O,GA9F5BxE,aCqHb4E,E,YAnHb,WAAYpF,GAAQ,IAAD,8BACjB,4CAAMA,KACDc,MAAQ,CACXuE,YAAa,GACbC,aAAc,GACdC,iBAAkB,IAEpB,EAAKtE,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKsE,WAAa,EAAKA,WAAWtE,KAAhB,gBAClB,EAAKuE,aAAe,EAAKA,aAAavE,KAAlB,gBATH,E,iFAWE,IAAD,OACN/B,EACTyD,WACAC,IAFS,uCAGwB9C,KAAKC,MAAM8C,OAHnC,YAG6C/C,KAAKC,MAAMqD,cAHxD,eAKRqC,GAAG,SAAS,SAAAC,GACd,IAAIV,EAAYU,EAASC,MACrBC,EAAgB,GACpB,IAAK,IAAI1C,KAAQ8B,EACfY,EAAczB,KAAK,CACjBc,WAAY/B,EACZkB,aAAcY,EAAU9B,GAAMkB,aAC9BC,cAAeW,EAAU9B,GAAMmB,cAC/BC,KAAMU,EAAU9B,GAAMoB,OAG1B,EAAK9C,SAAS,CACZ6D,aAAcO,EACdN,iBAAkBM,S,qCAKtB,IAAMC,EAAiBC,KAAKC,MAC1BD,KAAKE,SAAWlG,KAAKe,MAAMwE,aAAaxB,QAE1C/D,KAAKyF,aACLzF,KAAK0B,SAAS,CACZ8D,iBAAkB,CAACxF,KAAKe,MAAMwE,aAAaQ,Q,mCAI7C/F,KAAK0B,SAAS,CACZ8D,iBAAkBxF,KAAKe,MAAMwE,aAC7BD,YAAa,O,mCAGJ9E,GACX,IAAMa,EAAWb,EAAEc,OAAOC,KACpBC,EAAYhB,EAAEc,OAAOG,MAC3BzB,KAAK0B,SAAL,eACGL,EAAWG,M,+BAIN,IAAD,OAKD2E,EAAoBnG,KAAKe,MAAMyE,iBAAiBY,QAJnC,SAAAhD,GAAI,OACrBA,EAAKkB,aACF+B,cACAC,MAAM,EAAKvF,MAAMuE,YAAYe,iBAAkB,KAEpD,OACE,yBAAKjG,UAAU,kBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,iCAAd,aACA,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,8BACb,2BACEiC,KAAK,OACLd,KAAK,cACLE,MAAOzB,KAAKe,MAAMuE,YAClB/C,YAAY,mBACZnC,UAAU,eACVoC,SAAUxC,KAAKkB,eAEjB,yBAAKd,UAAU,sBACb,4BACEA,UAAU,oCACVoD,MAAM,yBACNjD,QAASP,KAAK0F,cAEd,kBAAC,IAAD,QAGJ,yBAAKtF,UAAU,sBACb,4BACEA,UAAU,oCACVoD,MAAM,eACNjD,QAASP,KAAKyF,YAEd,kBAAC,IAAD,aAQd,kBAAC,EAAD,CAEE1C,OAAQ/C,KAAKC,MAAM8C,OACnBO,cAAetD,KAAKC,MAAMqD,cAE1BsB,UAAW5E,KAAKC,MAAM2E,UACtBM,UAAWiB,S,GA7GG1F,aC4HT8F,E,YAnHb,aAAe,IAAD,8BACZ,+CA6CFpC,aAAe,SAAAjE,GACbd,EAASS,OAAO2G,oBAAmB,SAAAC,GACjCA,EAAOC,cAAc,CACnBC,YAAazG,IACZ4B,MAAK,WAEN,EAAKJ,SAAS,CACZkF,KAAMH,EACNvG,SAAUuG,EAAOE,YACjB5D,OAAQ0D,EAAOI,MAEjB9E,YAAS,sCAzDD,EA6Dd5B,WAAa,SAAAK,GACXA,EAAEmB,iBACF,EAAKD,SAAS,CACZxB,SAAU,KACV6C,OAAQ,KACR6D,KAAM,OAERxH,EACGS,OACAiH,UACAhF,MAAK,WACJC,YAAS,6BAxED,EA2Ed8B,eAAiB,SAAAJ,GACHrE,EACTyD,WACAC,IAFS,uCAE2B,EAAK/B,MAAM6F,KAAKC,MACnDxC,KAAK,CAAEZ,gBAAiBA,KA7E5B,EAAK1C,MAAQ,CACX6F,KAAM,KACN1G,SAAU,KACV6C,OAAQ,KACRG,aAAc,KACd6D,oBAAqB,MAPX,E,iFAYO,IAAD,OAClB3H,EAASS,OAAO2G,oBAAmB,SAAAC,GAC7BA,GACF,EAAK/E,SAAS,CACZkF,KAAMH,EACNvG,SAAUuG,EAAOE,YACjB5D,OAAQ0D,EAAOI,MAEMzH,EACpByD,WACAC,IAAI,gCAAkC2D,EAAOI,KACjClB,GAAG,SAAS,SAAAC,GACzB,IAAI1C,EAAe0C,EAASC,MACxBmB,EAAmB,GACvB,IAAK,IAAI5D,KAAQF,EACf8D,EAAiB3C,KAAK,CACpBf,cAAeF,EACfK,gBAAiBP,EAAaE,GAAMK,kBAGxC,EAAK/B,SAAS,CACZwB,aAAc8D,EACdD,oBAAqBC,EAAiBjD,aAI1C,EAAKrC,SAAS,CAAEkF,KAAM,Y,+BA4C1B,OACE,yBAAKxG,UAAU,aACb,kBAAC,EAAD,CACEF,SAAUF,KAAKe,MAAMb,SACrBC,WAAYH,KAAKG,aAEnB,kBAAC,EAAD,CAASD,SAAUF,KAAKe,MAAMb,SAAUC,WAAYH,KAAKG,aACzD,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAM8G,KAAK,mBAAmB/G,SAAUF,KAAKe,MAAMb,WACnD,kBAAC,EAAD,CAAO+G,KAAK,0BACZ,kBAAC,EAAD,CACEA,KAAK,8BACLpD,eAAgB7D,KAAK6D,eACrBX,aAAclD,KAAKe,MAAMmC,aACzBH,OAAQ/C,KAAKe,MAAMgC,SAGrB,kBAAC,EAAD,CAEEkE,KAAK,mDACLrC,UAAW5E,KAAKe,MAAMgC,SAExB,kBAAC,EAAD,CAASkE,KAAK,mDACd,kBAAC,EAAD,CACEA,KAAK,2BACL9C,aAAcnE,KAAKmE,qB,GA5Gb1D,aCDZyG,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShB,MACvB,2DAsCN,SAASiB,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT1F,MAAK,SAAA+F,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBhH,QACf2G,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,iHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,WAO5B7F,OAAM,SAAAC,GACLkG,QAAQlG,MAAM,4CAA6CA,MCzFjEsG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDe1C,SAAkBjB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIiB,IAAIC,mBAAwBxB,OAAOC,SAASjC,MACpDyD,SAAWzB,OAAOC,SAASwB,OAIvC,OAGFzB,OAAO0B,iBAAiB,QAAQ,WAC9B,IAAMtB,EAAK,UAAMoB,mBAAN,sBAEP1B,IAgEV,SAAiCM,EAAOC,GAEtCsB,MAAMvB,GACH1F,MAAK,SAAAkH,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C3B,UAAUC,cAAc2B,MAAMxH,MAAK,SAAA+F,GACjCA,EAAa0B,aAAazH,MAAK,WAC7BsF,OAAOC,SAASmC,eAKpBjC,EAAgBC,EAAOC,MAG1BzF,OAAM,WACLmG,QAAQC,IACN,oEArFAqB,CAAwBjC,EAAOC,GAI/BC,UAAUC,cAAc2B,MAAMxH,MAAK,WACjCqG,QAAQC,IACN,iHAMJb,EAAgBC,EAAOC,OC1C/BE,K","file":"static/js/main.e1b9d46a.chunk.js","sourcesContent":["//Login in credentials for firebase\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport \"firebase/auth\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBLyaLaT8fbNXoSb_MIgL9MEglKu6SUhoI\",\r\n  authDomain: \"reservation-app-e9376.firebaseapp.com\",\r\n  databaseURL: \"https://reservation-app-e9376.firebaseio.com\",\r\n  projectId: \"reservation-app-e9376\",\r\n  storageBucket: \"reservation-app-e9376.appspot.com\",\r\n  messagingSenderId: \"1089395231766\",\r\n  appId: \"1:1089395231766:web:53f971b387d2ebb0daf937\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n//for usage later in the app\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = firebase.auth();\r\nexport default firebase;\r\n","import React, { Component } from \"react\";\r\nimport { FaFly } from \"react-icons/fa\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    const { userName, logOutUser } = this.props;\r\n    return (\r\n      <nav className=\"navbar navbar-expand bg-dark navbar-dark\">\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"Reservation-App/\">\r\n            <FaFly className=\"mr-2\" />\r\n            Reservation App\r\n          </Link>\r\n          <div className=\"navbar-nav ml-auto\">\r\n            {userName ? (\r\n              <React.Fragment>\r\n                <Link\r\n                  className=\"nav-item nav-link\"\r\n                  to=\"Reservation-App/reservation\"\r\n                >\r\n                  My Reservation\r\n                </Link>\r\n                <Link\r\n                  className=\"nav-item nav-link\"\r\n                  to=\"/login\"\r\n                  onClick={e => logOutUser(e)}\r\n                >\r\n                  Log out\r\n                </Link>\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                <Link className=\"nav-item nav-link\" to=\"Reservation-App/login\">\r\n                  Login\r\n                </Link>\r\n                <Link\r\n                  className=\"nav-item nav-link\"\r\n                  to=\"Reservation-App/register\"\r\n                >\r\n                  Sign up\r\n                </Link>\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nclass Welcome extends Component {\r\n  render() {\r\n    const { userName, logOutUser } = this.props;\r\n    return (\r\n      <div className=\"text-center font-weight-bold mt-2 text-secondary\">\r\n        {userName && (\r\n          <React.Fragment>\r\n            <p className=\"\">\r\n              Welcome {userName},{\" \"}\r\n              <Link\r\n                className=\"text-secondary\"\r\n                to=\"Reservation-App/login\"\r\n                onClick={e => logOutUser(e)}\r\n              >\r\n                Log out\r\n              </Link>\r\n            </p>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Welcome;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    const { userName } = this.props;\r\n    return (\r\n      <div className=\"container text-center\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-10 col-sm-10 col-lg-8\">\r\n            <div className=\"display-4\">Make Your Reservation</div>\r\n            <p className=\"lead\">\r\n              {\" \"}\r\n              This simple app allows people to check available tickets and\r\n              corporate cards and make reservation. It also allows picking\r\n              random users to award giveaways.\r\n            </p>\r\n            {userName ? (\r\n              <React.Fragment>\r\n                <Link\r\n                  className=\"btn btn-outline-dark \"\r\n                  to=\"Reservation-App/reservation\"\r\n                >\r\n                  My Reservation\r\n                </Link>\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                <Link\r\n                  className=\"btn btn-outline-dark \"\r\n                  to=\"Reservation-App/login\"\r\n                >\r\n                  Login\r\n                </Link>\r\n                <Link\r\n                  className=\"btn btn-outline-dark \"\r\n                  to=\"Reservation-App/register\"\r\n                >\r\n                  Sign up\r\n                </Link>\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\n\r\nclass FormError extends Component {\r\n  render() {\r\n    const { errorMessage } = this.props;\r\n    return <div className=\"col-12 alert alert-danger px-3\">{errorMessage}</div>;\r\n  }\r\n}\r\n\r\nexport default FormError;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"./Firebase\";\r\nimport FormError from \"./FormError\";\r\nimport { navigate } from \"@reach/router\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errorMessage: null\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    const tempName = e.target.name;\r\n    const tempValue = e.target.value;\r\n    this.setState({\r\n      [tempName]: tempValue\r\n    });\r\n  }\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    var registrationInfo = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n\r\n    //after gathering the userinfo, sign in user,\r\n    //navigate to the myreservation page\r\n    // catch any error and update the state error message.\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(\r\n        registrationInfo.email,\r\n        registrationInfo.password\r\n      )\r\n      .then(() => {\r\n        navigate(\"Reservation-App/reservation\");\r\n      })\r\n      .catch(error => {\r\n        error.message\r\n          ? this.setState({ errorMessage: error.message })\r\n          : this.setState({ errorMessage: null });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-lg-8\">\r\n              <div className=\"card bg-dark text-light\">\r\n                <div className=\"card-body\">\r\n                  <h3 className=\"mb-3\">Log in</h3>\r\n                  <div className=\"form-row\">\r\n                    {/*if there is errorMessage, show it */}\r\n                    {this.state.errorMessage && (\r\n                      <FormError errorMessage={this.state.errorMessage} />\r\n                    )}\r\n                    <section className=\"col-sm-12 form-group\">\r\n                      <label\r\n                        className=\"form-control-label sr-only\"\r\n                        htmlFor=\"email\"\r\n                      >\r\n                        Email\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"Email\"\r\n                        name=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      />\r\n                    </section>\r\n                    <section className=\"col-sm-12 form-group\">\r\n                      <label\r\n                        className=\"form-control-label sr-only\"\r\n                        htmlFor=\"password\"\r\n                      >\r\n                        Password\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        id=\"Password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      />\r\n                    </section>\r\n                    <div className=\"form-group col\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-secondary\"\r\n                      >\r\n                        Login\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport { GoTrashcan, GoListUnordered } from \"react-icons/go\";\r\nimport firebase from \"./Firebase\";\r\nimport { FaLink } from \"react-icons/fa\";\r\nimport { navigate } from \"@reach/router\";\r\n\r\nclass ReservationsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.deleteReservation = this.deleteReservation.bind(this);\r\n  }\r\n  deleteReservation = (e, whichReservation) => {\r\n    e.preventDefault();\r\n    const ref = firebase\r\n      .database()\r\n      .ref(\r\n        `Reservation-App/reservations/${this.props.userID}/${whichReservation}`\r\n      );\r\n    ref.remove();\r\n  };\r\n\r\n  render() {\r\n    const { reservations } = this.props;\r\n    const myReservations = reservations.map(item => {\r\n      return (\r\n        <div className=\"list-group-item d-flex\" key={item.reservationID}>\r\n          <section className=\"btn-group align-self-center\" role=\"group\">\r\n            <button\r\n              className=\"btn btn-sm btn-outline-secondary\"\r\n              title=\"Attendees List\"\r\n              onClick={() =>\r\n                navigate(\r\n                  `Reservation-App/attendees/${this.props.userID}/${item.reservationID}`\r\n                )\r\n              }\r\n            >\r\n              <GoListUnordered />\r\n            </button>\r\n\r\n            <button\r\n              className=\"btn btn-sm btn-outline-secondary\"\r\n              title=\"Check in\"\r\n              onClick={() =>\r\n                navigate(\r\n                  `Reservation-App/checkin/${this.props.userID}/${item.reservationID}`\r\n                )\r\n              }\r\n            >\r\n              <FaLink />\r\n            </button>\r\n            <button\r\n              className=\"btn btn-sm btn-outline-secondary\"\r\n              title=\"Delete Reservation\"\r\n              onClick={e => this.deleteReservation(e, item.reservationID)}\r\n            >\r\n              <GoTrashcan />\r\n            </button>\r\n          </section>\r\n          <section className=\"pl-3 text-left align-self-center\">\r\n            {item.reservationName}\r\n          </section>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return <div>{myReservations}</div>;\r\n  }\r\n}\r\nexport default ReservationsList;\r\n","import React, { Component } from \"react\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport ReservationsList from \"./ReservationsList\";\r\nclass Reservation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      reservationName: \"\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    const itemName = e.target.name;\r\n    const itemValue = e.target.value;\r\n    this.setState({ [itemName]: itemValue });\r\n  }\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.addReservation(this.state.reservationName);\r\n    this.setState({\r\n      reservationName: \"\"\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-8 text-center\">\r\n            <h1 className=\"font-weight-light\">Add a Reservation</h1>\r\n            <div className=\"card bg-light\">\r\n              <div className=\"card-body text-center\">\r\n                <form className=\"form-group\" onSubmit={this.handleSubmit}>\r\n                  <div className=\"input-group input-group-lg\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"reservationName\"\r\n                      placeholder=\"Reservation name\"\r\n                      aria-describedby=\"buttonAdd\"\r\n                      value={this.state.reservationName}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-sm btn-secondary\"\r\n                        id=\"buttonAdd\"\r\n                      >\r\n                        <FaPlus />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-11 col-md-6 text-center\">\r\n            <div className=\"card border-top-0 rounded-0\">\r\n              {this.props.reservations && this.props.reservations.length ? (\r\n                <div className=\"card-body py-2\">\r\n                  <h4 className=\"card-title font-weight-light m-0\">\r\n                    Your Reservations\r\n                  </h4>\r\n                </div>\r\n              ) : null}\r\n              {this.props.reservations && (\r\n                <div className=\"list-group list-group-flush\">\r\n                  <ReservationsList\r\n                    reservations={this.props.reservations}\r\n                    userID={this.props.userID}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Reservation;\r\n","import React, { Component } from \"react\";\r\nimport FormError from \"./FormError\";\r\nimport firebase from \"./Firebase\";\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      repeatPassword: \"\",\r\n      errorMessage: null\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    const tempName = e.target.name;\r\n    const tempValue = e.target.value;\r\n    this.setState(\r\n      {\r\n        [tempName]: tempValue\r\n      },\r\n      () => {\r\n        if (this.state.password !== this.state.repeatPassword) {\r\n          this.setState({ errorMessage: \"Passwords do not match\" });\r\n        } else {\r\n          this.setState({ errorMessage: null });\r\n        }\r\n      }\r\n    );\r\n  }\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    var registrationInfo = {\r\n      userName: this.state.userName,\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    //after gathering the userinfo, create user in the firebase,\r\n    //pass the user name into method declared in main app,\r\n    //catch any error and update the state error message.\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(\r\n        registrationInfo.email,\r\n        registrationInfo.password\r\n      )\r\n      .then(() => {\r\n        this.props.registerUser(registrationInfo.userName);\r\n      })\r\n      .catch(error => {\r\n        error.message\r\n          ? this.setState({ errorMessage: error.message })\r\n          : this.setState({ errorMessage: null });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-lg-8\">\r\n              <div className=\"card bg-dark text-light\">\r\n                <div className=\"card-body\">\r\n                  <h3 className=\"mb-3\">Sign up</h3>\r\n                  <div className=\"form-row\">\r\n                    {/*if there is errorMessage, show it */}\r\n                    {this.state.errorMessage && (\r\n                      <FormError errorMessage={this.state.errorMessage} />\r\n                    )}\r\n                    <section className=\"col-sm-12 form-group\">\r\n                      <label\r\n                        className=\"form-control-label sr-only\"\r\n                        htmlFor=\"userName\"\r\n                      >\r\n                        User Name\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        id=\"userName\"\r\n                        placeholder=\"User Name\"\r\n                        name=\"userName\"\r\n                        value={this.state.userName}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      />\r\n                    </section>\r\n                    <section className=\"col-sm-12 form-group\">\r\n                      <label\r\n                        className=\"form-control-label sr-only\"\r\n                        htmlFor=\"email\"\r\n                      >\r\n                        Email\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"Email\"\r\n                        name=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      />\r\n                    </section>\r\n                    <section className=\"col-sm-6 form-group\">\r\n                      <label\r\n                        className=\"form-control-label sr-only\"\r\n                        htmlFor=\"password\"\r\n                      >\r\n                        Password\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        id=\"Password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      />\r\n                    </section>\r\n                    <section className=\"col-sm-6 form-group\">\r\n                      <label\r\n                        className=\"form-control-label sr-only\"\r\n                        htmlFor=\"repeatPassword\"\r\n                      >\r\n                        Repeat Password\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        id=\"displayName\"\r\n                        placeholder=\"Repeat Password\"\r\n                        name=\"repeatPassword\"\r\n                        value={this.state.repeatPassword}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      />\r\n                    </section>\r\n                    <div className=\"form-group\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-secondary\"\r\n                      >\r\n                        Register\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"./Firebase\";\r\nimport { navigate } from \"@reach/router\";\r\n\r\nclass Checkin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName: \"\",\r\n      email: \"\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    const tempName = e.target.name;\r\n    const tempValue = e.target.value;\r\n    this.setState({\r\n      [tempName]: tempValue\r\n    });\r\n  }\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const ref = firebase\r\n      .database()\r\n      .ref(\r\n        `Reservation-App/reservations/${this.props.userID}/${this.props.reservationID}/attendees`\r\n      );\r\n    ref.push({\r\n      attendeeName: this.state.userName,\r\n      attendeeEmail: this.state.email,\r\n      star: false\r\n    });\r\n    navigate(\r\n      `Reservation-App/attendees/${this.props.userID}/${this.props.reservationID}`\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"card bg-light\">\r\n                <div className=\"card-body\">\r\n                  <h3 className=\"font-weight-light mb-3\">Check in</h3>\r\n                  <section className=\"form-group\">\r\n                    <label\r\n                      className=\"form-control-label sr-only\"\r\n                      htmlFor=\"userName\"\r\n                    >\r\n                      Name\r\n                    </label>\r\n                    <input\r\n                      required\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      id=\"userName\"\r\n                      name=\"userName\"\r\n                      placeholder=\"Name\"\r\n                      value={this.state.userName}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </section>\r\n                  <section className=\"form-group\">\r\n                    <label\r\n                      className=\"form-control-label sr-only\"\r\n                      htmlFor=\"Email\"\r\n                    >\r\n                      Email\r\n                    </label>\r\n                    <input\r\n                      required\r\n                      className=\"form-control\"\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email\"\r\n                      value={this.state.email}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </section>\r\n                  <div className=\"form-group text-right mb-0\">\r\n                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                      Check in\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkin;\r\n","import React, { Component } from \"react\";\r\nimport { GoTrashcan, GoStar, GoMail } from \"react-icons/go\";\r\nimport firebase from \"./Firebase\";\r\n\r\nclass AttendeesList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.deleteAttendee = this.deleteAttendee.bind(this);\r\n  }\r\n  deleteAttendee = (e, whichReservation, whichAttendee) => {\r\n    e.preventDefault();\r\n    const adminUser = this.props.adminUser;\r\n    const ref = firebase\r\n      .database()\r\n      .ref(\r\n        `Reservation-App/reservations/${adminUser}/${whichReservation}/attendees/${whichAttendee}`\r\n      );\r\n    ref.remove();\r\n  };\r\n  toggleStar = (e, star, whichReservation, whichAttendee) => {\r\n    e.preventDefault();\r\n    const adminUser = this.props.adminUser;\r\n    const ref = firebase\r\n      .database()\r\n      .ref(\r\n        `Reservation-App/reservations/${adminUser}/${whichReservation}/attendees/${whichAttendee}/star`\r\n      );\r\n\r\n    if (star === undefined) {\r\n      ref.set(true);\r\n    } else {\r\n      ref.set(!star);\r\n    }\r\n  };\r\n  render() {\r\n    const admin = this.props.adminUser === this.props.userID ? true : false;\r\n    const attendees = this.props.attendees;\r\n    const myAttendees = attendees.map(item => {\r\n      return (\r\n        <div\r\n          className=\"col-8 col-sm-6 col-md-4 col-lg-3 mb-2 p-0 px-1\"\r\n          key={item.attendeeID}\r\n        >\r\n          <div className=\"card\">\r\n            <div\r\n              className={\r\n                //be careful to put a space before joining two strings\r\n                \"card-body px-3 py-2 d-flex align-items-center \" +\r\n                (admin ? \"\" : \"justify-content-center\")\r\n              }\r\n            >\r\n              {admin && (\r\n                <div className=\"btn-group pr-2\">\r\n                  <button\r\n                    className={\r\n                      \"btn btn-sm \" +\r\n                      (item.star ? \"btn-secondary\" : \"btn-outline-secondary\")\r\n                    }\r\n                    title=\"Give attendee a star\"\r\n                    onClick={e =>\r\n                      this.toggleStar(\r\n                        e,\r\n                        item.star,\r\n                        this.props.reservationID,\r\n                        item.attendeeID\r\n                      )\r\n                    }\r\n                  >\r\n                    <GoStar />\r\n                  </button>\r\n                  <a\r\n                    href={`mailto:${item.attendeeEmail}`}\r\n                    className=\"btn btn-sm btn-outline-secondary\"\r\n                    title=\"Mail Attendee\"\r\n                  >\r\n                    <GoMail />\r\n                  </a>\r\n                  <button\r\n                    className=\"btn btn-sm btn-outline-secondary\"\r\n                    title=\"Delete Attendee\"\r\n                    onClick={e =>\r\n                      this.deleteAttendee(\r\n                        e,\r\n                        this.props.reservationID,\r\n                        item.attendeeID\r\n                      )\r\n                    }\r\n                  >\r\n                    <GoTrashcan />\r\n                  </button>\r\n                </div>\r\n              )}\r\n              <div>{item.attendeeName}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return <div className=\"row justify-content-center\">{myAttendees}</div>;\r\n  }\r\n}\r\nexport default AttendeesList;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"./Firebase\";\r\nimport AttendeesList from \"./AttendeesList\";\r\nimport { FaUndo, FaRandom } from \"react-icons/fa\";\r\n\r\nclass Attendees extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchQuery: \"\",\r\n      allAttendees: [],\r\n      displayAttendees: []\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.resetQuery = this.resetQuery.bind(this);\r\n    this.chooseRandom = this.chooseRandom.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    const ref = firebase\r\n      .database()\r\n      .ref(\r\n        `Reservation-App/reservations/${this.props.userID}/${this.props.reservationID}/attendees`\r\n      );\r\n    ref.on(\"value\", snapshot => {\r\n      let attendees = snapshot.val();\r\n      let attendeesList = [];\r\n      for (let item in attendees) {\r\n        attendeesList.push({\r\n          attendeeID: item,\r\n          attendeeName: attendees[item].attendeeName,\r\n          attendeeEmail: attendees[item].attendeeEmail,\r\n          star: attendees[item].star\r\n        });\r\n      }\r\n      this.setState({\r\n        allAttendees: attendeesList,\r\n        displayAttendees: attendeesList\r\n      });\r\n    });\r\n  }\r\n  chooseRandom() {\r\n    const randomAttendee = Math.floor(\r\n      Math.random() * this.state.allAttendees.length\r\n    );\r\n    this.resetQuery();\r\n    this.setState({\r\n      displayAttendees: [this.state.allAttendees[randomAttendee]]\r\n    });\r\n  }\r\n  resetQuery() {\r\n    this.setState({\r\n      displayAttendees: this.state.allAttendees,\r\n      searchQuery: \"\"\r\n    });\r\n  }\r\n  handleChange(e) {\r\n    const tempName = e.target.name;\r\n    const tempValue = e.target.value;\r\n    this.setState({\r\n      [tempName]: tempValue\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const dataFilter = item =>\r\n      item.attendeeName\r\n        .toLowerCase()\r\n        .match(this.state.searchQuery.toLowerCase()) && true;\r\n    const filteredAttendees = this.state.displayAttendees.filter(dataFilter);\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-8\">\r\n            <h1 className=\"font-weight-light text-center\">Attendees</h1>\r\n            <div className=\"card bg-light mb-4\">\r\n              <div className=\"card-body text-center\">\r\n                <div className=\"input-group input-group-lg\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"searchQuery\"\r\n                    value={this.state.searchQuery}\r\n                    placeholder=\"Search Attendees\"\r\n                    className=\"form-control\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <div className=\"input-group-append\">\r\n                    <button\r\n                      className=\"btn- btn-sm btn-outline-secondary\"\r\n                      title=\"Pick a random attendee\"\r\n                      onClick={this.chooseRandom}\r\n                    >\r\n                      <FaRandom />\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"input-group-append\">\r\n                    <button\r\n                      className=\"btn- btn-sm btn-outline-secondary\"\r\n                      title=\"Reset search\"\r\n                      onClick={this.resetQuery}\r\n                    >\r\n                      <FaUndo />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <AttendeesList\r\n          // userID is from the URL\r\n          userID={this.props.userID}\r\n          reservationID={this.props.reservationID}\r\n          //adminUser from App.js\r\n          adminUser={this.props.adminUser}\r\n          attendees={filteredAttendees}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Attendees;\r\n","import React, { Component } from \"react\";\nimport { Router, navigate } from \"@reach/router\";\nimport firebase from \"./Firebase\";\n\nimport Navigation from \"./Navigation\";\nimport Welcome from \"./Welcome\";\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport Reservation from \"./Reservation\";\nimport Register from \"./Register\";\nimport Checkin from \"./Checkin\";\nimport Attendees from \"./Attendees\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: null,\n      userName: null,\n      userID: null,\n      reservations: null,\n      howManyReservations: null\n    };\n  }\n  //Whenever application loads, check the database\n  //Receives the info from the database\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(FBuser => {\n      if (FBuser) {\n        this.setState({\n          user: FBuser,\n          userName: FBuser.displayName,\n          userID: FBuser.uid\n        });\n        const reservationRef = firebase\n          .database()\n          .ref(\"Reservation-App/reservations/\" + FBuser.uid);\n        reservationRef.on(\"value\", snapshot => {\n          let reservations = snapshot.val();\n          let reservationsList = [];\n          for (let item in reservations) {\n            reservationsList.push({\n              reservationID: item,\n              reservationName: reservations[item].reservationName\n            });\n          }\n          this.setState({\n            reservations: reservationsList,\n            howManyReservations: reservationsList.length\n          });\n        });\n      } else {\n        this.setState({ user: null });\n      }\n    });\n  }\n  //Whenever something changes about the registration,\n  //the event onAuthStateChanged is generated and tracked,\n  //firebase method updateProfile has a displayname that can be\n  //updated with the userName we have and navigate to reservation page\n  registerUser = userName => {\n    firebase.auth().onAuthStateChanged(FBuser => {\n      FBuser.updateProfile({\n        displayName: userName\n      }).then(() => {\n        //updates the local state\n        this.setState({\n          user: FBuser,\n          userName: FBuser.displayName,\n          userID: FBuser.uid\n        });\n        navigate(\"Reservation-App/reservation\");\n      });\n    });\n  };\n  logOutUser = e => {\n    e.preventDefault();\n    this.setState({\n      userName: null,\n      userID: null,\n      user: null\n    });\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        navigate(\"Reservation-App/login\");\n      });\n  };\n  addReservation = reservationName => {\n    const ref = firebase\n      .database()\n      .ref(`Reservation-App/reservations/${this.state.user.uid}`);\n    ref.push({ reservationName: reservationName });\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <Navigation\n          userName={this.state.userName}\n          logOutUser={this.logOutUser}\n        />\n        <Welcome userName={this.state.userName} logOutUser={this.logOutUser} />\n        <Router>\n          <Home path=\"Reservation-App/\" userName={this.state.userName} />\n          <Login path=\"Reservation-App/login\" />\n          <Reservation\n            path=\"Reservation-App/reservation\"\n            addReservation={this.addReservation}\n            reservations={this.state.reservations}\n            userID={this.state.userID}\n          />\n\n          <Attendees\n            // use following to pass props\n            path=\"Reservation-App/attendees/:userID/:reservationID\"\n            adminUser={this.state.userID}\n          />\n          <Checkin path=\"Reservation-App/checkin/:userID/:reservationID\" />\n          <Register\n            path=\"Reservation-App/register\"\n            registerUser={this.registerUser}\n          />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// //Whenever application loads, check the database\n// componentDidMount() {\n//   //referring to the user variable in database\n//   const ref = firebase.database().ref(\"user\");\n\n//   //whenever we have a event of new value for the variable, grab the snapshot\n//   ref.on(\"value\", snapshot => {\n//     let FBuser = snapshot.val();\n//     this.setState({ user: FBuser });\n//   });\n// }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.register();\n/*\n\nCommon   \n          -Navigation\n          -Welcome message with login out option\nVisitor   \n          -Home Page\n          -Login (check database)\n          -Register (into the database)\nUser      \n          -reservation\n          -check in \n          -attendee \n\n*/\n"],"sourceRoot":""}